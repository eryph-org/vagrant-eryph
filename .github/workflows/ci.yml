name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  RUBY_VERSION: 3.2

jobs:
  test:
    name: Test Suite
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        ruby-version: ["3.1", "3.2", "3.3"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true

    - name: Install dependencies
      run: |
        gem install bundler
        bundle install

    - name: Run unit tests
      run: bundle exec rake unit

    - name: Build gem
      run: gem build vagrant-eryph.gemspec

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write
    if: github.event_name == 'push' || github.event_name == 'pull_request'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ env.RUBY_VERSION }}
        bundler-cache: true

    - name: Install bundler-audit
      run: gem install bundler-audit

    - name: Install brakeman
      run: gem install brakeman

    - name: Run bundler-audit
      run: |
        bundle install
        bundler-audit check --update

    - name: Run Brakeman security scan
      run: brakeman --no-pager --format json --output brakeman-results.json
      continue-on-error: true

    - name: Upload security scan results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-scan-results
        path: brakeman-results.json
        retention-days: 30

  documentation:
    name: Documentation Check
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check documentation exists
      run: |
        # Check that core documentation files exist
        test -f README.md
        test -f CLAUDE.md
        test -f examples/Vagrantfile

    - name: Validate example Vagrantfiles
      run: |
        # Check that example Vagrantfiles are syntactically correct
        ruby -c examples/Vagrantfile
        ruby -c examples/Vagrantfile.windows